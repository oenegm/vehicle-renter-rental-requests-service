version: '3.9'
services:

  keycloak-db:
    image: postgres:latest
    environment:
      - 'POSTGRES_DB=keycloak'
      - 'POSTGRES_USER=keycloak'
      - 'POSTGRES_PASSWORD=keycloak'
    ports:
      - "5000:5432"
    networks:
      - "backend"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    container_name: keycloak
    image: jboss/keycloak:latest
    environment:
      - 'KEYCLOAK_USER=admin'
      - 'KEYCLOAK_PASSWORD=admin'
      - 'DB_VENDOR=POSTGRES'
      - 'DB_ADDR=keycloak-db'
      - 'DB_DATABASE=keycloak'
      - 'DB_USER=keycloak'
      - 'DB_PASSWORD=keycloak'
    ports:
      - "8080:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    command:
      - "-b 0.0.0.0"
    networks:
      - "backend"


  rental-requests-db:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=rental-requests'
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5003:5432'
    networks:
      - "backend"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rental-requests-service:
    container_name: rental-requests-service
    build: ./rental-requests-service
    image: rental-requests-service:latest
    depends_on:
      rental-requests-db:
        condition: service_healthy
    #      config-server:
    #        condition: service_started
    environment:
      - 'DB_URL=jdbc:postgresql://rental-requests-db:5432/postgres'
      - 'DB_USERNAME=postgres'
      - 'DB_PASSWORD=password'
      - 'KEYCLOAK_URL=http://keycloak:8080'
      - 'KEYCLOAK_REALM=vehicle-renter'
      - 'SERVER_PORT=8083'
    ports:
      - "8083:8083"
    networks:
      - "backend"

networks:
  backend:
    driver: bridge